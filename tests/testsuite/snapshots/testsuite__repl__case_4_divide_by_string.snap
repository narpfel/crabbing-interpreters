---
source: tests/testsuite/main.rs
info:
  program: crabbing-interpreters
  args: []
  stdin: "42 / \"string\""
---
success: true
exit_code: 0
----- stdout -----
[0mÎ»Â» [1m[0m[3mBinary {
    lhs: Literal(
        Literal {
            kind: Number(
                42.0,
            ),
            token: Token {
                kind: Number,
                loc: <input>:0..2,
            },
        },
    ),
    op: BinOp {
        kind: Divide,
        token: Token {
            kind: Slash,
            loc: <input>:3..4,
        },
    },
    rhs: Literal(
        Literal {
            kind: String(
                "string",
            ),
            token: Token {
                kind: String,
                loc: <input>:5..13,
            },
        },
    ),
}[0m
Error: type error in binary operator `/`: lhs has type `Number`, but rhs has type `String`
   â•­â”€[<input>:1:1]
   â”‚
 1 â”‚ 42 / "string"
   â”‚ â”€â”¬ â”¬ â”€â”€â”€â”€â”¬â”€â”€â”€  
   â”‚  â”‚ â”‚     â•°â”€â”€â”€â”€â”€ this is of type `String`
   â”‚  â”‚ â”‚           
   â”‚  â”‚ â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ the operator in question
   â”‚  â”‚             
   â”‚  â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ this is of type `Number`
   â”‚ 
   â”‚ Help: operator `/` can only be applied to numbers
â”€â”€â”€â•¯
[0mÎ»Â» [1m[0m
----- stderr -----
